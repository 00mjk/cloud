syntax = "proto3";

package ocf.cloud.device.directory.pb;

import "github.com/go-ocf/ocf-cloud/resource-aggregate/pb/commands.proto";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "github.com/go-ocf/ocf-cloud/resource-directory/pb/device-directory;device-directory";

enum Status {
  ONLINE = 0;
  OFFLINE = 1;
}

message GetDevicesRequest {
  ocf.cloud.resourceaggregate.pb.AuthorizationContext authorization_context = 1;
  repeated string type_filter = 2;
  repeated Status status_filter = 3;
  repeated string device_ids_filter = 4;
}

message LocalizedString {
	string language = 1 [(gogoproto.jsontag)="language"];
	string value = 2 [(gogoproto.jsontag)="value"];
}

message Resource {
  repeated string resource_types = 1 [(gogoproto.jsontag)="rt"];
	string name = 2 [(gogoproto.jsontag)="n"];
	repeated LocalizedString manufacturer_name = 3 [(gogoproto.jsontag)="dmn"];
  string model_number = 4 [(gogoproto.jsontag)="dmno"];
}

message Device {
  string id = 1;
  Resource resource = 2; // if it is nil, resource eventstore doesn't have any information about resource {device}/oic/d
  bool is_online = 3;
}
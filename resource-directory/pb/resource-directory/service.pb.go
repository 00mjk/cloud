// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/resource-directory/service.proto

package resource_directory

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("pb/resource-directory/service.proto", fileDescriptor_ac13a7e262d65b22)
}

var fileDescriptor_ac13a7e262d65b22 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0x48, 0xd2, 0x2f,
	0x4a, 0x2d, 0xce, 0x2f, 0x2d, 0x4a, 0x4e, 0xd5, 0x4d, 0xc9, 0x2c, 0x4a, 0x4d, 0x2e, 0xc9, 0x2f,
	0xaa, 0xd4, 0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x92, 0xcf, 0x4f, 0x4e, 0xd3, 0x4b, 0xce, 0xc9, 0x2f, 0x4d, 0xd1, 0x83, 0xa9, 0xd5, 0x83, 0xab,
	0xd5, 0x2b, 0x48, 0x92, 0xd2, 0x4d, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5,
	0x4f, 0xcf, 0x4f, 0xcf, 0xd7, 0x07, 0xeb, 0x4b, 0x2a, 0x4d, 0x03, 0xf3, 0xc0, 0x1c, 0x30, 0x0b,
	0x62, 0x9e, 0x94, 0x1f, 0x8a, 0x72, 0xdd, 0xfc, 0xe4, 0x34, 0x7d, 0xb0, 0xe9, 0xd8, 0x5c, 0x82,
	0xdd, 0x7d, 0x85, 0xa5, 0xa9, 0x45, 0x99, 0xa9, 0xc5, 0x10, 0xf3, 0x8c, 0xa6, 0x30, 0x72, 0x09,
	0x06, 0x41, 0x15, 0xb9, 0xc0, 0xd4, 0x08, 0xd5, 0x73, 0x09, 0xb8, 0xa7, 0x96, 0xc0, 0xc4, 0x7d,
	0x32, 0xf3, 0xb2, 0x8b, 0x85, 0x2c, 0xf4, 0x08, 0x78, 0x45, 0x0f, 0x5d, 0x4b, 0x50, 0x6a, 0x61,
	0x69, 0x6a, 0x71, 0x89, 0x94, 0x2e, 0x41, 0x9d, 0xc8, 0xda, 0x94, 0x18, 0x0c, 0x18, 0x9d, 0x42,
	0xa3, 0x82, 0x29, 0xf5, 0xa8, 0x35, 0xa6, 0x50, 0x12, 0x1b, 0xd8, 0xd3, 0xc6, 0x80, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xeb, 0xa6, 0x15, 0x2f, 0xbb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ResourceDirectoryClient is the client API for ResourceDirectory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceDirectoryClient interface {
	GetResourceLinks(ctx context.Context, in *GetResourceLinksRequest, opts ...grpc.CallOption) (ResourceDirectory_GetResourceLinksClient, error)
}

type resourceDirectoryClient struct {
	cc *grpc.ClientConn
}

func NewResourceDirectoryClient(cc *grpc.ClientConn) ResourceDirectoryClient {
	return &resourceDirectoryClient{cc}
}

func (c *resourceDirectoryClient) GetResourceLinks(ctx context.Context, in *GetResourceLinksRequest, opts ...grpc.CallOption) (ResourceDirectory_GetResourceLinksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResourceDirectory_serviceDesc.Streams[0], "/ocf.cloud.resource.directory.pb.ResourceDirectory/GetResourceLinks", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourceDirectoryGetResourceLinksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ResourceDirectory_GetResourceLinksClient interface {
	Recv() (*ResourceLink, error)
	grpc.ClientStream
}

type resourceDirectoryGetResourceLinksClient struct {
	grpc.ClientStream
}

func (x *resourceDirectoryGetResourceLinksClient) Recv() (*ResourceLink, error) {
	m := new(ResourceLink)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ResourceDirectoryServer is the server API for ResourceDirectory service.
type ResourceDirectoryServer interface {
	GetResourceLinks(*GetResourceLinksRequest, ResourceDirectory_GetResourceLinksServer) error
}

// UnimplementedResourceDirectoryServer can be embedded to have forward compatible implementations.
type UnimplementedResourceDirectoryServer struct {
}

func (*UnimplementedResourceDirectoryServer) GetResourceLinks(req *GetResourceLinksRequest, srv ResourceDirectory_GetResourceLinksServer) error {
	return status.Errorf(codes.Unimplemented, "method GetResourceLinks not implemented")
}

func RegisterResourceDirectoryServer(s *grpc.Server, srv ResourceDirectoryServer) {
	s.RegisterService(&_ResourceDirectory_serviceDesc, srv)
}

func _ResourceDirectory_GetResourceLinks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetResourceLinksRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ResourceDirectoryServer).GetResourceLinks(m, &resourceDirectoryGetResourceLinksServer{stream})
}

type ResourceDirectory_GetResourceLinksServer interface {
	Send(*ResourceLink) error
	grpc.ServerStream
}

type resourceDirectoryGetResourceLinksServer struct {
	grpc.ServerStream
}

func (x *resourceDirectoryGetResourceLinksServer) Send(m *ResourceLink) error {
	return x.ServerStream.SendMsg(m)
}

var _ResourceDirectory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ocf.cloud.resource.directory.pb.ResourceDirectory",
	HandlerType: (*ResourceDirectoryServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetResourceLinks",
			Handler:       _ResourceDirectory_GetResourceLinks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "pb/resource-directory/service.proto",
}

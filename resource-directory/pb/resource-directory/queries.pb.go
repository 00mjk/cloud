// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pb/resource-directory/queries.proto

package resource_directory

import (
	fmt "fmt"
	pb "github.com/go-ocf/cloud/resource-aggregate/pb"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GetResourceLinksRequest struct {
	AuthorizationContext *pb.AuthorizationContext `protobuf:"bytes,1,opt,name=authorization_context,json=authorizationContext,proto3" json:"authorization_context,omitempty"`
	TypeFilter           []string                 `protobuf:"bytes,2,rep,name=type_filter,json=typeFilter,proto3" json:"type_filter,omitempty"`
	DeviceIdsFilter      []string                 `protobuf:"bytes,3,rep,name=device_ids_filter,json=deviceIdsFilter,proto3" json:"device_ids_filter,omitempty"`
}

func (m *GetResourceLinksRequest) Reset()         { *m = GetResourceLinksRequest{} }
func (m *GetResourceLinksRequest) String() string { return proto.CompactTextString(m) }
func (*GetResourceLinksRequest) ProtoMessage()    {}
func (*GetResourceLinksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8d424b2674f7bb2, []int{0}
}
func (m *GetResourceLinksRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetResourceLinksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetResourceLinksRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetResourceLinksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResourceLinksRequest.Merge(m, src)
}
func (m *GetResourceLinksRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetResourceLinksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResourceLinksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetResourceLinksRequest proto.InternalMessageInfo

func (m *GetResourceLinksRequest) GetAuthorizationContext() *pb.AuthorizationContext {
	if m != nil {
		return m.AuthorizationContext
	}
	return nil
}

func (m *GetResourceLinksRequest) GetTypeFilter() []string {
	if m != nil {
		return m.TypeFilter
	}
	return nil
}

func (m *GetResourceLinksRequest) GetDeviceIdsFilter() []string {
	if m != nil {
		return m.DeviceIdsFilter
	}
	return nil
}

type ResourceLink struct {
	Resource *pb.Resource `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (m *ResourceLink) Reset()         { *m = ResourceLink{} }
func (m *ResourceLink) String() string { return proto.CompactTextString(m) }
func (*ResourceLink) ProtoMessage()    {}
func (*ResourceLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_c8d424b2674f7bb2, []int{1}
}
func (m *ResourceLink) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ResourceLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ResourceLink.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ResourceLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceLink.Merge(m, src)
}
func (m *ResourceLink) XXX_Size() int {
	return m.Size()
}
func (m *ResourceLink) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceLink.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceLink proto.InternalMessageInfo

func (m *ResourceLink) GetResource() *pb.Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func init() {
	proto.RegisterType((*GetResourceLinksRequest)(nil), "ocf.cloud.resource.directory.pb.GetResourceLinksRequest")
	proto.RegisterType((*ResourceLink)(nil), "ocf.cloud.resource.directory.pb.ResourceLink")
}

func init() {
	proto.RegisterFile("pb/resource-directory/queries.proto", fileDescriptor_c8d424b2674f7bb2)
}

var fileDescriptor_c8d424b2674f7bb2 = []byte{
	// 329 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0x87, 0x9b, 0xb7, 0xf0, 0xa2, 0x5b, 0x41, 0x0c, 0x8a, 0xa5, 0x87, 0xb4, 0xd4, 0x4b, 0x11,
	0xba, 0x01, 0xf5, 0xa6, 0x1e, 0xfc, 0x83, 0x22, 0x78, 0x8a, 0x9e, 0xbc, 0x94, 0x64, 0x33, 0x4d,
	0x17, 0x9b, 0x4c, 0xba, 0x3b, 0x2b, 0xd6, 0x4f, 0xe1, 0xc7, 0xf2, 0x58, 0x6f, 0x1e, 0xa5, 0xfd,
	0x22, 0x62, 0x9a, 0xb4, 0x85, 0x16, 0x8a, 0xd7, 0xdf, 0x3e, 0xcf, 0xce, 0x0c, 0x33, 0xec, 0x20,
	0x0d, 0x5c, 0x05, 0x1a, 0x8d, 0x12, 0xd0, 0x0e, 0xa5, 0x02, 0x41, 0xa8, 0x86, 0xee, 0xc0, 0x80,
	0x92, 0xa0, 0x79, 0xaa, 0x90, 0xd0, 0xae, 0xa3, 0xe8, 0x72, 0xd1, 0x47, 0x13, 0xf2, 0x82, 0xe5,
	0x33, 0x96, 0xa7, 0x41, 0xed, 0x3c, 0x92, 0xd4, 0x33, 0x01, 0x17, 0x18, 0xbb, 0x11, 0xb6, 0x51,
	0x74, 0xdd, 0x0c, 0x9f, 0x7f, 0xed, 0x47, 0x91, 0x82, 0xc8, 0x27, 0x70, 0x17, 0x0a, 0xe6, 0xff,
	0xd7, 0xce, 0xfe, 0xa6, 0x0b, 0x8c, 0x63, 0x3f, 0x09, 0x73, 0xbb, 0xf9, 0x69, 0xb1, 0xfd, 0x5b,
	0x20, 0x2f, 0x67, 0xef, 0x65, 0xf2, 0xac, 0x3d, 0x18, 0x18, 0xd0, 0x64, 0x4b, 0xb6, 0xe7, 0x1b,
	0xea, 0xa1, 0x92, 0x6f, 0x3e, 0x49, 0x4c, 0x3a, 0x02, 0x13, 0x82, 0x57, 0xaa, 0x5a, 0x0d, 0xab,
	0x55, 0x39, 0x3a, 0xe1, 0xcb, 0x93, 0xcd, 0x4a, 0xf1, 0x34, 0xe0, 0x17, 0x8b, 0xf2, 0xd5, 0xd4,
	0xf5, 0x76, 0xfd, 0x15, 0xa9, 0x5d, 0x67, 0x15, 0x1a, 0xa6, 0xd0, 0xe9, 0xca, 0x3e, 0x81, 0xaa,
	0xfe, 0x6b, 0x94, 0x5b, 0x9b, 0x1e, 0xfb, 0x8d, 0x6e, 0xb2, 0xc4, 0x3e, 0x64, 0x3b, 0x21, 0xbc,
	0x48, 0x01, 0x1d, 0x19, 0xea, 0x02, 0x2b, 0x67, 0xd8, 0xf6, 0xf4, 0xe1, 0x2e, 0xd4, 0x53, 0xb6,
	0xf9, 0xc8, 0xb6, 0x16, 0xe7, 0xb1, 0xaf, 0xd9, 0x46, 0xd1, 0x5f, 0xde, 0x7a, 0x6b, 0x5d, 0xeb,
	0x85, 0xef, 0xcd, 0xcc, 0xcb, 0xf8, 0x63, 0xec, 0x58, 0xa3, 0xb1, 0x63, 0x7d, 0x8f, 0x1d, 0xeb,
	0x7d, 0xe2, 0x94, 0x46, 0x13, 0xa7, 0xf4, 0x35, 0x71, 0x4a, 0x4f, 0x0f, 0x6b, 0x37, 0x30, 0xbf,
	0x8d, 0x95, 0x17, 0x73, 0xba, 0x1c, 0x05, 0xff, 0xb3, 0xfd, 0x1c, 0xff, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x33, 0x6c, 0xc8, 0xe9, 0x64, 0x02, 0x00, 0x00,
}

func (m *GetResourceLinksRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetResourceLinksRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetResourceLinksRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.DeviceIdsFilter) > 0 {
		for iNdEx := len(m.DeviceIdsFilter) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.DeviceIdsFilter[iNdEx])
			copy(dAtA[i:], m.DeviceIdsFilter[iNdEx])
			i = encodeVarintQueries(dAtA, i, uint64(len(m.DeviceIdsFilter[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.TypeFilter) > 0 {
		for iNdEx := len(m.TypeFilter) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.TypeFilter[iNdEx])
			copy(dAtA[i:], m.TypeFilter[iNdEx])
			i = encodeVarintQueries(dAtA, i, uint64(len(m.TypeFilter[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.AuthorizationContext != nil {
		{
			size, err := m.AuthorizationContext.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQueries(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ResourceLink) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ResourceLink) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ResourceLink) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Resource != nil {
		{
			size, err := m.Resource.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintQueries(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintQueries(dAtA []byte, offset int, v uint64) int {
	offset -= sovQueries(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetResourceLinksRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AuthorizationContext != nil {
		l = m.AuthorizationContext.Size()
		n += 1 + l + sovQueries(uint64(l))
	}
	if len(m.TypeFilter) > 0 {
		for _, s := range m.TypeFilter {
			l = len(s)
			n += 1 + l + sovQueries(uint64(l))
		}
	}
	if len(m.DeviceIdsFilter) > 0 {
		for _, s := range m.DeviceIdsFilter {
			l = len(s)
			n += 1 + l + sovQueries(uint64(l))
		}
	}
	return n
}

func (m *ResourceLink) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Resource != nil {
		l = m.Resource.Size()
		n += 1 + l + sovQueries(uint64(l))
	}
	return n
}

func sovQueries(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozQueries(x uint64) (n int) {
	return sovQueries(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetResourceLinksRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueries
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetResourceLinksRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetResourceLinksRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AuthorizationContext", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueries
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueries
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueries
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.AuthorizationContext == nil {
				m.AuthorizationContext = &pb.AuthorizationContext{}
			}
			if err := m.AuthorizationContext.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TypeFilter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueries
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueries
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueries
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TypeFilter = append(m.TypeFilter, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceIdsFilter", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueries
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthQueries
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthQueries
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceIdsFilter = append(m.DeviceIdsFilter, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueries(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQueries
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQueries
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ResourceLink) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowQueries
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ResourceLink: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ResourceLink: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resource", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowQueries
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthQueries
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthQueries
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Resource == nil {
				m.Resource = &pb.Resource{}
			}
			if err := m.Resource.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipQueries(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthQueries
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthQueries
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipQueries(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowQueries
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueries
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowQueries
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthQueries
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupQueries
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthQueries
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthQueries        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowQueries          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupQueries = fmt.Errorf("proto: unexpected end of group")
)
